!!! 5
%html(lang="en")
	%head
		%meta(charset="utf-8")
		%title= "%s - %s - Gnuside" % [@title, @chapter]
		%meta{:content => "%s - %s - Gnuside" % [@title, @chapter], :name => "description"}
		%meta{:content => "Gnuside", :name => "author"}
		%link(href="http://fonts.googleapis.com/css?family=Lato:400,700,400italic,700italic" rel="stylesheet" type="text/css")
		%link(href="css/reset.css" rel="stylesheet")
		%link(href="css/main.css" rel="stylesheet")
		%link(href="css/zenburn.css" rel="stylesheet")
		/ gnuside css
		%link(href="css/presentation.css" rel="stylesheet")

	%body
		#reveal
			/ Any section element inside of this container is displayed as a slide
			.slides
				%section(data-state="title")
					%h1
						= @title
					%h3.inverted
						= @chapter
					%br
					%br
					%p 2012-04
					%br
					%br
					%i
						%small
							%a(href = "http://www.gnuside.com") Gnuside
							\/
							%a(href = "http://twitter.com/gnuside") @gnuside

				= yield

			/ The navigational controls UI
			%aside.controls
				%a.left(href = "#") ◄
				%a.right(href = "#") ►
				%a.up(href = "#") ▲
				%a.down(href = "#") ▼
			/ Displays presentation progress, max value changes via JS to reflect # of slides
			.progress
				%span
		%script(src = "js/reveal.js")
		%script(src = "js/highlight.js")
		%script(src = "js/jquery-latest.js")

		:javascript
				// Parse the query string into a key/value object
			var query = {};
			location.search.replace( /[A-Z0-9]+?=(\w*)/gi, function(a) {
				query[ a.split( '=' ).shift() ] = a.split( '=' ).pop();
			} );

			Reveal.initialize({
				// Display controls in the bottom right corner
				controls: true,

				// Display a presentation progress bar
				progress: true,

				// If true; each slide will be pushed to the browser history
				history: true,

				// Flags if mouse wheel navigation should be enabled
				mouseWheel: true,

				// Apply a 3D roll to links on hover
				rollingLinks: true,
				//true,

				// UI style
				theme: query.theme || 'default', // default/neon

				// Transition style
				transition: query.transition || 'linear'	//default' // default/cube/page/concave/linear(2d)
			});

			hljs.initHighlightingOnLoad();

			
			$(document).ready(function() {
				$("pre code.js").prop('contentEditable','true').each( function() {
					var codeElem = this;
					$("<input type='button' value='Run!' class='runbutton'></input>")
						.click(function(){ eval(codeElem.textContent)})
						.insertAfter(this);
				});
			});
		/ end

