%section{"data-state" => "title"}
	%h1 Administration GNU/Linux
	%h3.inverted Noyau, performance et tuning
	%br
	%br
	%p 2012-05
	%br
	%br
	%i
		%small
			%a{:href => "http://www.gnuside.com"} Gnuside
			\/
			%a{:href => "http://twitter.com/gnuside"} @gnuside

%section
	%h2 Le noyau

	%section
		%h3 Présentation

		%p Le coeur d'un système d'exploitation
		%ul
			%li Communication inter-process
			%li Gestion de la mémoire
			%li Gestion des processus et scheduling
			%li Gestion des entrées et sorties
			%li Gestion de la sécurité !

	%section
		%h3 Types de kernel

		.column-left
			%p 
				%b Micro-kernels 
				%br
				ou 
				%b kernels modulaires
			%ul
				%li Contient uniquement le coeur de l'OS
				%li Tout le reste est fourni en tant que services
				%li Flexible et très modulaire
				%li Exemples: Amoeba, Mach, QNX, ...

		.column-right
			%p
				%b Kernels monolitiques
				%br
				%br
			%ul
				%li Contient tout ce qui est lié à l'OS
				%li Construit statiquement ou dynamiquement
				%li Très performant
				%li Exemples: VxWorks, Linux, ...

	%section
		%h3 Architecture

		%ul
			%li Kernel
			%li Kernel space
			%li System call I/F
			%li User space


	%section
		%h3 Fonctionnalités

		%ul
			%li Gestion des processus
			%li Gestion de la mémoire
			%li Gestion des périphériques
			%li Gestion du stockage
			%li Gestion du réseau

	%section
		%h3 Versions
		
		%ul.column-left
			%li
				%b <= 2.5 
				\- numéro mineur pour le type de kernel
				(pair = stable, impair = instable)
			%li 
				%b >= 2.6 
				\- numérotation changée !
			%li 
				%b >= 3.0 
				\- numérotation simplifiée (un chiffre en moins)
			
		
		%ul.column-right
			%li 
				%b 2.6.x(.y) 
				\- versions stables
			%li 
				%b 2.6.x 
				\- publiés par Linus Torvalds
			%li 
				%b 2.6.x.y 
				\- publiés par la 
				%em stable team
				( 
				%em y
				\= numéro du patch)
			%li 
				%b 2.6.x-rcX
				, 
				%b 2.6.x-rcX-mmY
				, 
				%b 2.6.x-mmX 
				\- versions de développement


	%section
		%h3 Nouveautés du 2.6 / 3.3


%section
	%h2 Compiler un noyau

	%section
		%h3 Pourquoi faire ?

		%ul
			%li utiliser une version spécifique
			%li modifier la configuration statique
			%li optimiser pour un matériel
			%li améliorer la consommation mémoire
			%li supprimer des drivers inutiles
			%li raccourcir le temps de démarrage
			%li épater ses amis ;-)

		%br
		%br
		%p 
			Parce que c'est un 
			%em rite initiatique 
			;-)


	%section
		%h3 Prérequis

		%ul
			%li 
				%b gcc
			%li 
				%b binutils
			%li 
				%b libc6 devel
			%li 
				%b make
			%li 
				%b ncurses-dev
				(pour le menu texte)
			%li 
				%b qt4 devel
				(pour le menu graphique, très lourd)
			%li 
				%b gtk2 devel
				(pour l'autre menu graphique, très lourd)
	

	%section
		%h3 Code source

		%p 
			Télécharger depuis
			%a{ :href => "http://www.kernel.org" } www.kernel.org

		%pre
			%code
				:preserve
					# cd /usr/src
					# wget http://www.kernel.org/pub/linux/kernel/v3.0/linux-3.3.5.tar.bz2
					# tar xavf linux-3.3.5.tar.bz2
					# cd linux-3.3.5
			/

	%section
		%h3 Build system

		.column-left
			%p Composants clefs
			%ul
				%li 
					%tt Makefile
				%li 
					%tt Kconfig

		.column-right
			%p Configuration du Makefile
			%ul
				%li Pour préciser la version
				%li 
					Pour la cross-compilation (
					%tt ARCH
					, 
					%tt CROSS_COMPILE
					)
				%li
				

	%section
		%h3 Inclusion des modules

		%ul
			%li 
				%b En dur
				\- incluse dans le kernel
			%li
				%b En module
				\- optionnel et chargé à la demande
		%p 


	%section
		%h3 Méthode de configuration

		%p 
			%tt make config
			%br
			%small configuration interactive en texte
		%p
			%tt make menuconfig
			%br
			%small menus de configuration en texte
		%p
			%tt make xconfig
			%br
			%small menus de configuration graphiques

		%p et aussi defconfig, oldconfig, ...

	%section
		%h3 Fichiers de configuration

		%p
			%tt .config
			%br
			%small 
				configuration
				%em de travail
				(dans les sources)

		%p
			%tt /boot/config-xxxx
			%br
			%small configuration du noyau xxxx (pour les noyaux installés)

		%pre
			%code
				:preserve
					# cp /boot/config-`uname -r` /usr/src/linux-3.3.5/.config
			/

	
	%section
		%h3 Options de configuration

		%small
			%ul
				%li Code Maturity level
				%li General Setup
				%li Loadable Module Support
				%li Block Layer
				%li Networking
				%li Device Drivers
				%li File Systems
				%li Kernel Hacking
				%li Security Options
				%li Cryptographic Options
				%li Library Routines

	%section
		%h3 Compilation

		%p 
			Objectif: 
			%b créer l'image du kernel 
			(
			%tt vmlinux
			)

		%p
			%tt make
			%br
			%small tout compiler

		%br
		%p
			%tt make modules
			%br
			%small compiler les modules

		%br
		%p
			%tt make modules_prepare
			%br
			%small préparer la compilation des modules


	%section
		%h3 Nettoyage

		%p
			%tt make clean
			%br
			%small nettoyage simple

		%br
		%p
			%tt make mrproper
			%br
			%small 
				nettoyage en profondeur 
				%br
				(supprime aussi la configuration)

	%section
		%h3 Installation
		
		%p
			%tt make install
			%br
			%small installer le kernel

		%p
			%tt make modules_install
			%br
			%small installer les modules

		%p 
			%b Important : mettre à jour le bootloader !
			%br
			%small
				(
				%tt /etc/lilo.conf
				, 
				%tt /boot/grub/menu.lst
				,
				%tt /boot/grub/grub.cfg
				ou autre)

%section
	%h2 Démarrage du kernel

	%section
		%h3 Paramètres optionnels

		%ul
			%li console
			%li mem
			%li resume
			%li quiet
			%li ...

		%p 
			Extrait de 
			%tt menu.lst
			(GRUB)

		%pre
			%code
				:preserve
					/boot/vmlinuz-3.1.10-1.9-desktop 
						root=/dev/disk/by-id/ata-VBOX_HARDDISK_VBbc7a0ab4-75120ea2-part2 
						showopts apm=off noresume nosmp maxcpus=0 edd=off 
						powersaved=off nohz=off highres=off processor.max_cstate=1 
						nomodeset x11failsafe vga=0x314
						initrd=/boot/initrd-3.1.10-1.9-desktop
			/


	%section
		%h3 Séquence de démarrage

		%ul
			%li 
				%b Initialisation de la plate-forme
				%br
				(CPU, MMU, ...)
			%li 
				%b Initialisation des drivers
				%br
				(Filesystem)
			%li 
				Montage du 
				%b root filesystem
			%li 
				Chargement des 
				%b autres drivers
			%li 
				%b Initcall 
				&amp; libération de la mémoire
			%li 
				%b Passage au userspace
				%br
				(appel du premier processus: init)

	%section
		%h3 Vérifier l'état

		%p
			%tt dmesg
			ou
			%tt /var/log/dmesg

		%p
			%tt uname -r

		%pre
			%code
				:preserve
					$ uname -a
					Linux batcave.batdomain 3.1.10-1.9-desktop #1 SMP PREEMPT Thu Apr 5 18:48:38 UTC 2012 (4a97ec8) i686 i686 i386 GNU/Linux
					$ uname -r
					3.1.10-1.9-desktop
			/


%section
	%h2 Usage des modules

	%section
		%h3 Connaitre son matériel

		%p
			%tt lspci -v
		%p
			%tt lsusb
		%p
			%tt cat /proc/cpuinfo
		%p
			%tt  cat /proc/meminfo
		%p
			%tt fdisk -l
		%p
			%tt dmesg
	
	%section
		%h3 Lister les modules

		%p 
			%tt /lib/modules
			%br
			%small modules disponibles

		%p 
			%tt lsmod
			%br
			%small liste les modules chargés

		%p 
			%tt modprobe -l
			%br
			%small liste les modules chargés (et leur chemin)

	%section
		%h3 À propos des modules

		%p
			%tt 
				modinfo 
				%em module-name
			%br
			%small afficher les informations sur un module

	%section
		%h3 Charger un module
		%p
			%tt 
				insmod
				%em module-name
			%br
			%small charger un module

		%p
			%tt 
				modprobe
				%em module-name
			%br
			%small charger un module et ses dépendances

	%section
		%h3 Décharger un module
		%p
			%tt 
				rmmod
				%em module-name
			%br
			%small décharger un module

		%p
			%tt 
				modprobe -r
				%em module-name
			%br
			%small décharger un module et ses dépendances

	%section
		%h3 Automatiser le chargement...

		%p
			%tt /etc/modules.conf
			(2.4) ou
			%tt /etc/modprobe.conf
			(2.6)
			%br
			%small liste des modules à charger automatiquement

	%section
		%h3 Nommage des périphériques

		%p Décidé par les modules

		%p 
			Changeable par 
			%b udev

		%p 
			%tt /etc/udev/rules.d/persistent-net.rules

		%pre
			%code
				:preserve
					# This file was automatically generated by the /lib/udev/write_net_rules
					# program, run by the persistent-net-generator.rules rules file.
					#
					# You can modify it, as long as you keep each rule on a single
					# line, and change only the value of the NAME= key.

					# PCI device 0x197b:0x0250 (jme)
					SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="f4:6d:04:23:78:74", ATTR{dev_id}=="0x0", ATTR{type}=="1", KERNEL=="eth*", NAME="eth0"

					# PCI device 0x168c:0x002b (ath9k)
					SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="e0:b9:a5:1b:51:62", ATTR{dev_id}=="0x0", ATTR{type}=="1", KERNEL=="wlan*", NAME="wlan0"
			/

%section
	%h2 Fin
	%section
		%h3 Références
		%ul
			%li
				%a{ :href => "http://kernel.org/" } The Linux Kernel Archives
			%li
				%a{ :href => "http://doc.ubuntu-fr.org/tutoriel/compiler_linux" } Ubuntu-fr : Compiler son kernel

	%section
		%h3 Des questions ?

	%section
		%h3 Merci !


